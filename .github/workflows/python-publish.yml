name: Publish Wheels to PyPI

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    env:
      CHOLUPDATES_DISABLE_CYTHON_BUILD: 1

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # This is needed so that all tags are loaded (important for setuptools_scm)
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip
    - name: Build and install package
      run: |
        python -m pip install -e .[testing,linting]
    - name: Linting
      run: |
        pylint src/cholupdates
      if: always()
    - name: Run tests
      run: |
        pytest
      if: always()
    - name: Build package using `build`
      run: |
        pip install --upgrade build
        python -m build
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install --upgrade twine
        twine upload dist/*-py3-none-any.whl

  deploy-manylinux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # This is needed so that all tags are loaded (these are used in setuptools_scm)
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip
    - name: Build and install package
      run: |
        python -m pip install -e .[testing,linting]
    - name: Linting
      run: |
        pylint src/cholupdates
      if: always()
    - name: Run tests
      run: |
        pytest
      if: always()
    - name: Build Python + Cython `manylinux` Wheels
      uses: RalfG/python-wheels-manylinux-build@v0.3.3
      with:
        python-versions: cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install --upgrade twine
        twine upload dist/*-manylinux*.whl
